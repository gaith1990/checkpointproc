PROCEDURE dot_product(var v1 v2 : ARRAY_OF FLOAT; )
VAR
    ps:FLOAT:=0
BEGIN
    FOR i FROM 0 TO v1.length-1   DO
       ps= ps+v1[i]*v2[i]
    END_FOR
END
//*function
FUNCTION function_produit scalaire(v1,v2) : INTEGER
VAR
    ps:INTEGER:=0
BEGIN
    FOR i FROM 0 TO v1.length-1   DO
       ps= ps+v1[i]*v2[i]
       RETURN ps
    END_FOR
END

 
 ALGORITHM algorithm_name
 VAR
     v : ARRAY_OF float
     n,m:INTEGER //* n=nombre des vecteurs    m=nombre des lignes 
 BEGIN
 write("nombre des vecteurs")
 read(n)
 write("nombre des lignes du chaque vecteur")
 FOR i FROM 0 TO n-1   DO
 FOR j FROM 1 TO m   DO
     write ("write v"ij)
     read(vij)
 END_FOR
     
 END_FOR
     FOR i FROM 0 TO n-2   DO
        FOR j FROM i+1 TO n   DO
        produit scalaire(v[i],v[j])
        IF (produit scalaire=0) THEN
            write("v["i"] and v["j"] are othogonal")
        END_IF
            
        END_FOR
     END_FOR
 END
